const buttonPhotos = document.querySelector("#photos");
const buttonSave = document.querySelector("#save");
const inputDate = document.querySelector("#form-date");
buttonPhotos.addEventListener("click", uploadPhotos);
buttonSave.addEventListener("click", injectionSave);

function uploadPhotos(evt) {
  evt.preventDefault();

  chrome.tabs.query({ active: true }, (tabs) => {
    const tab = tabs[0];
    if (tab) {
      chrome.scripting.executeScript({
        target: { tabId: tab.id, allFrames: true },
        func: injectionPhotos,
      });
    }
  });
}

function injectionSave(evt) {
  evt.preventDefault();

  chrome.tabs.query({ active: true }, (tabs) => {
    const tab = tabs[0];
    if (tab) {
      chrome.scripting.executeScript({
        target: { tabId: tab.id, allFrames: true },
        func: saveData,
      });
    }
  });
}

function injectionPhotos() {
  // Variables
  const iFrameHTML = document.querySelector("#formCanvas").contentWindow.document.querySelector("html");
  if (iFrameHTML.querySelector(".injection")) {
    return;
  }
  const iFrameHead = iFrameHTML.querySelector("head");
  const iframeForm = iFrameHTML.querySelector("#formData107");
  const saveButton = iFrameHTML.querySelector("#buttonFormSave");
  const addImgBtnContainer = iFrameHTML.querySelector("#\\32 1184 > caption");
  const addImgButton = addImgBtnContainer.querySelector(".button");
  const injectDiv = document.createElement("div");
  const divWrapper = document.createElement("div");
  const injectInput = document.createElement("input");
  const injectButton = document.createElement("button");
  const dragIco = document.createElement("div");
  const divTitle = document.createElement("span");
  const inputDate = document.createElement("input");
  const stylesLayout = `<style>
  .injection {
    width: 270px;
    position: absolute;
    z-index: 999;
    background: #fff;
    padding: 30px;
    border-radius: 20px;
    box-shadow: 0px 0px 10px grey;
    top: 20px;
    right: 20px;
  }
  .injection__content {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  .injection__content div {
    position: absolute;
    right: -10px;
    top: -10px;
    width: 20px;
    height: 20px;
    background: url("https://img.icons8.com/?size=512&id=LSSRyyQ8tv5H&format=png");
    background-size: contain;
    background-repeat: no-repeat;
    cursor: grab;
  }
  .injection__content span {
    font-size: 25px;
    line-height: 1;
    margin-bottom: 10px;
  }
  .injection input[type=file]::file-selector-button {
    border: none;
    background: #084cdf;
    padding: 10px 20px;
    min-height: 45px;
    border-radius: 10px;
    margin-right: 15px;
    color: #fff;
    cursor: pointer;
    transition: background 0.2s ease-in-out;
  }
  .injection input[type=file]::file-selector-button:hover {
    background: #0d45a5;
  }
  .injection button {
    border: none;
    background: #084cdf;
    padding: 10px 20px;
    border-radius: 10px;
    color: #fff;
    min-height: 45px;
    cursor: pointer;
    transition: background 0.2s ease-in-out;
  }
  .injection button:hover {
    background: #0d45a5;
  }
  .injection input[type="date"] {
    min-height: 45px;
    color: #000;
    font-family: Open Sans, Arial, sans-serif;
    font-size: 16px;
    padding-left: 10px;
    border: 2px solid #084cdf;
    border-radius: 10px;
    box-sizing: border-box;
    cursor: pointer;
    outline: none;
}
  </style>`;

  // Listeners
  injectButton.addEventListener("click", downloadPhotos);
  dragIco.addEventListener("mousedown", startDraggingDiv);
  iFrameHTML.addEventListener("mouseup", stopDraggingDiv);

  // Main
  injectDiv.classList.add("injection");
  divWrapper.classList.add("injection__content");
  divTitle.textContent = "I-N-J-E-C-T-E-D üòà";
  injectInput.type = "file";
  injectInput.setAttribute("multiple", "");
  inputDate.type = "date";
  injectButton.textContent = "–í—Å—Ç–∞–≤–∏—Ç—å";

  iFrameHead.insertAdjacentHTML("beforeEnd", stylesLayout);
  divWrapper.appendChild(divTitle);
  divWrapper.appendChild(dragIco);
  divWrapper.appendChild(injectInput);
  divWrapper.appendChild(inputDate);
  divWrapper.appendChild(injectButton);
  injectDiv.appendChild(divWrapper);
  iframeForm.appendChild(injectDiv);

  const date = new Date();
  let day = date.getDate();
  let month = date.getMonth() + 1;
  const year = date.getFullYear();
  if (day < 10) {
    day = `0${day}`;
  }
  if (month < 10) {
    month = `0${month}`;
  }

  inputDate.value = `${year}-${month}-${day}`;

  // Methods
  function downloadPhotos(evt) {
    evt.preventDefault();
    const files = injectInput.files;
    let counter = 0;
    const interval = setInterval(upload, 3000);

    function upload() {
      // 1. –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è
      addImgButton.click();

      const photoTable = iFrameHTML.querySelector("#\\32 1184");
      const downloadInputs = photoTable.querySelectorAll(".fileLoad");
      const downloadInput = downloadInputs[downloadInputs.length - 1];
      const textareas = photoTable.querySelectorAll("textarea");
      const currentTextarea = textareas[textareas.length - 1];
      const currentFile = files[`${counter}`];
      debugger;
      const prepareDate = inputDate.value.split("-");
      const downloadDate = `–î–∞—Ç–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${prepareDate[2]}.${prepareDate[1]}.${prepareDate[0]} –≥.`;

      currentTextarea.value = downloadDate;

      // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –∏–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
      const myFile = new File(["file"], `${currentFile.name}`, {
        type: `${currentFile.type}`,
        size: currentFile.size,
        webkitRelativePath: `${currentFile.webkitRelativePath}`,
        lastModified: `${currentFile.lastModified}`,
        lastModifiedDate: `${currentFile.lastModifiedDate}`,
      });

      if (myFile.lastModified < 1) {
        return;
      }

      // 2. –í—ã–¥–µ–ª—è–µ–º –∏–Ω–ø—É—Ç –¥–ª—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –∏ –≤—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–µ–≥–æ –¥–∞–Ω–Ω—ã–µ
      const dataTransfer = new DataTransfer();
      dataTransfer.items.add(currentFile);
      downloadInput.files = dataTransfer.files;
      console.log(downloadInput.files);
      downloadInput.dispatchEvent(new Event("change"));

      counter++;
      // 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
      if (counter >= files.length) {
        clearInterval(interval);
        setTimeout(() => {
          saveButton.click();
          alert("–£—Å–ø–µ—Ö! üòà");
        }, 3000);
      }
    }
  }

  function startDraggingDiv(evt) {
    dragIco.style.cursor = "grabbing";
    iFrameHTML.addEventListener("mousemove", dragDiv);
  }

  function stopDraggingDiv(evt) {
    dragIco.style.cursor = "grab";
    iFrameHTML.removeEventListener("mousemove", dragDiv);
  }

  function dragDiv(evt) {
    injectDiv.style.top = `${evt.pageY - 25}px`;
    injectDiv.style.left = `${evt.pageX - 300}px`;
  }
}

function saveData() {
  if (!document.querySelector("#formCanvas")) {
    return;
  }
  const iFrameHTML = document.querySelector("#formCanvas").contentWindow.document.querySelector("html");
  const iFrameHead = iFrameHTML.querySelector("head");
  const iFrameBody = iFrameHTML.querySelector("body");
  const iframeForm = iFrameHTML.querySelector("#formData181");
  const wholeAddress = document.querySelector("#title").textContent;
  const area = wholeAddress.split(",")[0];
  const district = wholeAddress.split(",")[1];
  const address = iFrameBody.querySelector("#comboboxTextcomp_12339").value;
  const repairProjectsTable = iframeForm.querySelector("#group_22130");
  const repairProjectsTableRows = repairProjectsTable.querySelectorAll("tr");
  const conclusionsPrevSurvey = iframeForm.querySelector("#gridSql_22131").querySelector(".data");
  const conclusionsPrevSurveyRows = conclusionsPrevSurvey.querySelectorAll("tr");

  const data = {
    address: {
      area: area,
      district: district,
      address: address,
    },
    "–ü–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ": {
      "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç—Ç–∞–∂–µ–π": iframeForm.querySelector("#comp_12472").value,
      "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—ä–µ–∑–¥–æ–≤": iframeForm.querySelector("#comp_12473").value,
      "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–º –∑–¥–∞–Ω–∏—è": iframeForm.querySelector("#comp_12474").value,
      "–ö–æ–ª-–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä": iframeForm.querySelector("#comp_12475").value,
      "–ü–ª–æ—â–∞–¥—å –ø–æ–ª–µ–∑–Ω–∞—è": iframeForm.querySelector("#comp_12476").value,
      "–ü–ª–æ—â–∞–¥—å –≤ –∂–∏–ª—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö": iframeForm.querySelector("#comp_12477").value,
      "–ü–ª–æ—â–∞–¥—å –≤ –Ω–µ–∂–∏–ª—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏—è—Ö": iframeForm.querySelector("#comp_12478").value,
      "–°–µ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞": iframeForm.querySelector("#lookupTextcomp_12479").value,
      "–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏": iframeForm.querySelector("#comp_12480").value,
      "–ì–æ–¥ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏": iframeForm.querySelector("#comp_12481").value,
      "–ö–ª–∞—Å—Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–¥–∞–Ω–∏—è": iframeForm.querySelector("#lookupTextcomp_12482").value,
      "–§–∏–∑–∏—á–µ—Å–∫–∏–π –∏–∑–Ω–æ—Å (%) –ø–æ –¥–∞–Ω–Ω—ã–º –ë–¢–ò": iframeForm.querySelector("#comp_12661").value,
      "–ø–æ –¥–∞–Ω–Ω—ã–º –ë–¢–ò –Ω–∞ –¥–∞—Ç—É": iframeForm.querySelector("#comp_12662").value,
      "–ù–∞–ª–∏—á–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π": iframeForm.querySelector("#lookupTextcomp_12663").value,
      "–ö–æ–ª-–≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π": iframeForm.querySelector("#comp_12664").value,
      "–ö–æ–ª-–≤–æ –Ω–∞–¥—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Å–æ–æ—Ä—É–∂–µ–Ω–∏–π": iframeForm.querySelector("#comp_12671").value,
      –¢–ü: iframeForm.querySelector("#comp_12665").value,
      "–≤ —Ç.—á. –º–∞—Å–ª—è–Ω—ã–µ –¢–ü": iframeForm.querySelector("#comp_12666").value,
      "–ú–∞–≥–∏—Å—Ç—Ä–∞–ª–∏ —Ç—Ä–∞–Ω–∑–∏—Ç–Ω—ã–µ": iframeForm.querySelector("#lookupTextcomp_12667").value,
      "–§–∞–∫—Ç. —É–¥. –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ç–µ–ø–ª–æ–≤–æ–π —ç–Ω., –ì–∫–∞–ª/–º¬≤": iframeForm.querySelector("#comp_12668").value,
      "–ü—Ä–æ–µ–∫—Ç. —É–¥. –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ —Ç–µ–ø–ª–æ–≤–æ–π —ç–Ω., –∫–î–∂/(–º¬≤√ó–≥—Ä–∞–¥.√ó—Å—É—Ç.)": iframeForm.querySelector("#comp_12669").value,
      "–í–µ–ª–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (%)": iframeForm.querySelector("#comp_12670").value,
    },
    "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã —Ä–µ–º–æ–Ω—Ç–æ–≤": {
      1: {
        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: "",
        "–î–∞—Ç–∞, ‚Ññ": "",
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "",
      },
      2: {
        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: "",
        "–î–∞—Ç–∞, ‚Ññ": "",
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "",
      },
      3: {
        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: "",
        "–î–∞—Ç–∞, ‚Ññ": "",
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "",
      },
      4: {
        –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: "",
        "–î–∞—Ç–∞, ‚Ññ": "",
        "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "",
      },
    },
    "–í—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è": {
      0: {
        id: "",
        –î–∞—Ç–∞: "",
        "‚Ññ": "",
        "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–∞–Ω–∏—è –≤ —Ü–µ–ª–æ–º": "",
      },
    },
  };

  for (let i = 0; i < repairProjectsTableRows.length; i++) {
    if (i < 2 || repairProjectsTableRows[i].classList.contains("gridBGTotal")) {
      continue;
    }
    if (i > 1) {
      data["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã —Ä–µ–º–æ–Ω—Ç–æ–≤"][i]["–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"] = repairProjectsTableRows[i].querySelector("#comp_12333").value;
      data["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã —Ä–µ–º–æ–Ω—Ç–æ–≤"][i]["–î–∞—Ç–∞, ‚Ññ"] = repairProjectsTableRows[i].querySelector("#comp_12334").value;
      data["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã —Ä–µ–º–æ–Ω—Ç–æ–≤"][i]["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ"] = repairProjectsTableRows[i].querySelector("#comp_12335").value;
    }
  }
  for (let i = 0; i < conclusionsPrevSurveyRows.length; i++) {
    if (!data["–í—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"][i]) {
      data["–í—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"][i] = new Object();
    }
    data["–í—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"][i]["id"] = conclusionsPrevSurveyRows[i].querySelector("td:nth-child(1)").firstElementChild.textContent;
    data["–í—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"][i]["–î–∞—Ç–∞"] = conclusionsPrevSurveyRows[i].querySelector("td:nth-child(2)").textContent;
    data["–í—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"][i]["‚Ññ"] = conclusionsPrevSurveyRows[i].querySelector("td:nth-child(3)").textContent;
    data["–í—ã–≤–æ–¥—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"][i]["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–∞–Ω–∏—è –≤ —Ü–µ–ª–æ–º"] = conclusionsPrevSurveyRows[i].querySelector("td:nth-child(4)").textContent;
  }

  console.log(data);
}
